# Jedna od ove dve strukture mora postojati i biti validna.
# Prvo se pokusava sa testcases strukturom, pa onda subtasks.

# Zadatak se ocenjuje po test primerima.
testcases:
    # Opciono, default vrednost je prazna lista.
    # Primeri sa papira, ovi primeri ce biti vizuelno izdvojeni pri prikazivanju feedback-a.
    # Dodatno, ako je zadatak u takmicenju, bez obzira da li je feedback na nivou takmicenja dostupan,
    # za ove primere je vidljiv.
    public: []
    # Ukupan broj mogucih poena za zadatak. Vrednost svakog primera je:
    # (total - overrides) / broj primera
    score_total: <>
    # Opciono.
    # Za svaki primer moguce je pregaziti default poene. Lista takvih primera.
    score_overrides:
          # Ime primera, bez in/out ekstenzije, recimo "case01"
        - name: <>
          # Broj poena, ovaj broj se mnozi sa vrednoscu koju vrati checker iz [0.0, 1.0]
          score: <>

# Zadatak se ocenjuje po grupama test primera (subtaskovima, podzadacima)
subtasks:
    # Opciono, default vrednost je prazna lista.
    # Lista id-eva subtaskova za koje su svi primeri deo zadatka (vidljivi korisnicima).
    # Bez obzira na konfiguraciju feedback-a takmicenja, feedback na ovim 
    # subtaskovima je dostupan.
    public: []
    # Ukupan broj mogucih poena za zadatak.
    # Verifikujemo da je suma score polja u svim grupama jednaka ovom polju.
    score_total: <>
    # Subtaskovi  
    groups:
          # Subtaskovi su poredjani po ovom id-u
        - id: <>
          # Broj poena koji donosi subtask. Ocenjivanje se vrsi po principu
          # score * min(rezultat checker-a na svakom test primeru iz subtaska)
          score: <>
          # Test primeri u ovom subtasku, lista imena bez in/out ekstenzije, recimo ["case01"]
          testcases: []
